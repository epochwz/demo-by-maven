<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- 开启 Spring 的注解扫描 -->
  <context:component-scan base-package="fun.epoch.learn.spring.aop"/>

  <!-- AspectJ AOP 的相关配置 -->
  <aop:config>
    <!-- 配置切点 -->
    <aop:pointcut id="allBefore" expression="execution(* *(..))"/>
    <aop:pointcut id="allAfter" expression="execution(* fun.epoch.learn.spring.aop..*(..))"/>
    <aop:pointcut id="delete" expression="execution(* fun.epoch.learn.spring.aop..delete(..))"/>
    <aop:pointcut id="findAll" expression="execution(* fun.epoch.learn.spring.aop.target.ProductDao.findAll(..))"/>
    <aop:pointcut id="findOne" expression="execution(public void fun.epoch.learn.spring.aop.target.ProductDao.findOne(..))"/>
    <!-- 配置切面 -->
    <aop:aspect ref="aspectJXmlDemoAspect">
      <!-- 前置通知 -->
      <aop:before method="beforeAdvice" pointcut-ref="allBefore"/>
      <!-- 后置通知 -->
      <aop:after-returning method="afterReturningAdvice" returning="returnValue" pointcut-ref="allAfter"/>
      <!-- 环绕通知 -->
      <aop:around method="aroundAdvice" pointcut-ref="delete"/>
      <!-- 异常通知 -->
      <aop:after-throwing method="afterThrowingAdvice" pointcut-ref="findAll" throwing="e"/>
      <!-- 最终通知 -->
      <aop:after method="afterAdvice" pointcut-ref="findOne"/>
      <aop:after method="afterAdvice" pointcut-ref="findAll"/>
    </aop:aspect>
  </aop:config>
</beans>